#################################################################
#                                                               #
#                    Packages/Core Network                      #
#                                                               #
#################################################################

#################################################################
#                                                               #
#                       Binary Sensors                          #
#                                                               #
#################################################################

binary_sensor:

  - platform: ping
    name: WAN Ping
    host: !secret ping_ip
    count: 4
    scan_interval: 600      

  - platform: template
    sensors:
      # True if there's an update available for supervisor
      updater_supervisor:
        friendly_name: 'Updater - Supervisor'
        device_class: problem
        entity_id: sensor.supervisor_updates
        value_template: "{{ state_attr('sensor.supervisor_updates', 'current_version') != state_attr('sensor.supervisor_updates', 'newest_version') }}"
        availability_template: "{{ (states('sensor.supervisor_updates') | int(-1)) > -1 }}"

      # True if there's updates available for any addons
      updater_addons:
        friendly_name: 'Updater - Addons'
        device_class: problem
        entity_id: sensor.supervisor_updates
        value_template: "{{ states('sensor.supervisor_updates') | int > 0 }}"

#################################################################
#                                                               #
#                           Sensors                             #
#                                                               #
#################################################################

sensor:

####################################################
#                                                  #
#              Sensor - Command Line               #
#                                                  #
####################################################


  - platform: command_line
    name: CPU Temperature
    command: "cat /sys/class/thermal/thermal_zone0/temp"
    unit_of_measurement: "Â°C"
    value_template: '{{ (value | multiply(0.001)) | round(1) }}'
    
####################################################
#                                                  #
#                  Sensor - SNMP                   #
#                                                  #
#################################################### 

  - platform: snmp
    name: 'ERL WAN In'
    host: !secret edge_os_host
    baseoid: 1.3.6.1.2.1.31.1.1.1.6.2
    community: 'public'
    version: '2c'
    scan_interval: 10

  - platform: snmp
    name: 'ERL WAN Out'
    host: !secret edge_os_host
    baseoid: 1.3.6.1.2.1.31.1.1.1.10.2
    community: 'public'
    version: '2c'
    scan_interval: 10

  - platform: snmp
    host: !secret nas_ip
    baseoid: .1.3.6.1.2.1.25.1.1.0
    name: 'NAS Uptime'
    value_template: >-
      {% set time = (value | int) | int %}
      {% set minutes = ((time % 360000) / 6000) | int%}
      {% set hours = ((time % 8640000) / 360000) | int %}
      {% set days = (time / 8640000) | int %}
        {%- if time < 60-%}
          00:00:00
        {%- else -%}
          {%- if days == 0 -%}
            00
          {%- endif -%}
          {%- if days > 0 -%}        
            {%- if days < 10 -%}
              0{{ days }}
            {%- else -%}
              {{ days }}
            {%- endif -%}
          {%- endif -%}
          {%- if hours == 0 -%}
            :00
          {%- endif -%}
          {%- if hours > 0 -%}        
            {%- if hours < 10 -%}
              :0{{ hours }}
            {%- else -%}
              :{{ hours }}
            {%- endif -%}
          {%- endif -%}
          {%- if minutes == 0 -%}
            :00
          {%- endif -%}
          {%- if minutes > 0 -%}
            {%- if minutes < 10 -%}
              :0{{ minutes }}
            {%- else -%}
              :{{ minutes }}
            {%- endif -%}
          {%- endif -%}
        {%- endif -%}

  - platform: snmp
    host: !secret core_router_ip
    baseoid: .1.3.6.1.2.1.25.1.1.0
    name: 'Core Router Uptime'
    value_template: >-
      {% set time = (value | int) | int %}
      {% set minutes = ((time % 360000) / 6000) | int%}
      {% set hours = ((time % 8640000) / 360000) | int %}
      {% set days = (time / 8640000) | int %}
        {%- if time < 60-%}
          00:00:00
        {%- else -%}
          {%- if days == 0 -%}
            00
          {%- endif -%}
          {%- if days > 0 -%}        
            {%- if days < 10 -%}
              0{{ days }}
            {%- else -%}
              {{ days }}
            {%- endif -%}
          {%- endif -%}
          {%- if hours == 0 -%}
            :00
          {%- endif -%}
          {%- if hours > 0 -%}        
            {%- if hours < 10 -%}
              :0{{ hours }}
            {%- else -%}
              :{{ hours }}
            {%- endif -%}
          {%- endif -%}
          {%- if minutes == 0 -%}
            :00
          {%- endif -%}
          {%- if minutes > 0 -%}
            {%- if minutes < 10 -%}
              :0{{ minutes }}
            {%- else -%}
              :{{ minutes }}
            {%- endif -%}
          {%- endif -%}
        {%- endif -%}

####################################################
#                                                  #
#             Sensor - System Monitor              #
#                                                  #
####################################################

  - platform: systemmonitor
    resources:
    - type: disk_use_percent
      arg: '/'
    - type: memory_use_percent
    - type: processor_use
    - type: last_boot

####################################################
#                                                  #
#               Sensor - Statistics                #
#                                                  #
####################################################

  - platform: statistics
    name: 'ERL WAN In Stats'
    entity_id: sensor.erl_wan_in
    sampling_size: 4
    max_age:
      hours: 24

  - platform: statistics
    name: 'ERL WAN Out Stats'
    entity_id: sensor.erl_wan_out
    sampling_size: 4
    max_age:
      hours: 24

####################################################
#                                                  #
#                 Sensor - Synology                #
#                                                  #
####################################################

  - platform: synology_dsm
    host: !secret nas_host
    username: !secret nas_user
    password: !secret nas_pass
    scan_interval: 10
    monitored_conditions:
      - cpu_total_load
      - memory_real_usage
      - network_up
      - network_down
      - volume_status
      - volume_percentage_used
      - volume_disk_temp_avg     

#################################################################
#                                                               #
#                       Template Sensors                        #
#                                                               #
################################################################# 
   
  - platform: template
    sensors:
      wan_in_mbps:
        value_template: "{{ (state_attr('sensor.erl_wan_in_stats','change_rate')|float*8*(state_attr('sensor.erl_wan_in_stats', 'sampling_size')-1)/1000000)|round(2) }}"
        unit_of_measurement: 'MBps'
        entity_id: sensor.erl_wan_in_stats

      wan_out_mbps:
        value_template: "{{ (state_attr('sensor.erl_wan_out_stats','change_rate')|float*8*(state_attr('sensor.erl_wan_out_stats', 'sampling_size')-1)/1000000)|round(2) }}"
        unit_of_measurement: 'MBps'
        entity_id: sensor.erl_wan_out_stats
      
      wan_ping:
          friendly_name: 'WAN Ping'
          entity_id:
            - binary_sensor.wan_ping
          value_template: "{{ state_attr('binary_sensor.wan_ping', 'round_trip_time_avg') | round(2) }}"
          unit_of_measurement: "ms"
      
      sensor_count:
        friendly_name: 'Number of Sensors'
        value_template: >
          {%- set domains = ['sensor'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}
          
      automation_count:
        friendly_name: 'Number of Automations'
        value_template: >
          {%- set domains = ['automation'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}
          
      script_count:
        friendly_name: 'Number of Scripts'
        value_template: >
          {%- set domains = ['script'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}
          
      switch_count:
        friendly_name: 'Number of Switches'
        value_template: >
          {%- set domains = ['switch'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}
          
      binary_sensor_count:
        friendly_name: 'Number of Binary Sensors'
        value_template: >
          {%- set domains = ['binary_sensor'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}
          
      lights_count:
        friendly_name: 'Number of Lights'
        value_template: >
          {%- set domains = ['light'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}
          
      tracker_count:
        friendly_name: 'Number of Devices'
        value_template: >
          {%- set domains = ['device_tracker'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}
          
      camera_count:
        friendly_name: 'Number of Devices'
        value_template: >
          {%- set domains = ['camera'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}
          
      fan_count:
        friendly_name: 'Number of Devices'
        value_template: >
          {%- set domains = ['fan'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}
          
      media_player_count:
        friendly_name: 'Number of Devices'
        value_template: >
          {%- set domains = ['media_player'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      automation_count_high:
        friendly_name: 'Automation Count High Limit'
        value_template: '{{ states.input_number.automation_count_expected.state |int + 150}}'

      automation_count_low:
        friendly_name: 'Automation Count Low Limit'
        value_template: '{{ states.input_number.automation_count_expected.state |int - 1}}'

      binary_sensor_count_high:
        friendly_name: 'Binary Sensor Count High Limit'
        value_template: '{{ states.input_number.binary_sensor_count_expected.state |int + 150}}'

      binary_sensor_count_low:
        friendly_name: 'Binary Sensor Count Low Limit'
        value_template: '{{ states.input_number.binary_sensor_count_expected.state |int - 1}}'

      switch_count_high:
        friendly_name: 'Switch Count High Limit'
        value_template: '{{ states.input_number.switch_count_expected.state |int + 150}}'

      switch_count_low:
        friendly_name: 'Switch Count Low Limit'
        value_template: '{{ states.input_number.switch_count_expected.state |int - 1}}'

      fan_count_high:
        friendly_name: 'Fan Count High Limit'
        value_template: '{{ states.input_number.fan_count_expected.state |int + 150}}'

      fan_count_low:
        friendly_name: 'Fan Count Low Limit'
        value_template: '{{ states.input_number.fan_count_expected.state |int - 1}}'

      light_count_high:
        friendly_name: 'Light Count High Limit'
        value_template: '{{ states.input_number.light_count_expected.state |int + 150}}'

      light_count_low:
        friendly_name: 'Light Count Low Limit'
        value_template: '{{ states.input_number.light_count_expected.state |int - 1}}'

      tracked_device_count_high:
        friendly_name: 'Tracked Device Count High Limit'
        value_template: '{{ states.input_number.tracked_device_count_expected.state |int + 150}}'

      tracked_device_count_low:
        friendly_name: 'Tracked Device Count Low Limit'
        value_template: '{{ states.input_number.tracked_device_count_expected.state |int - 1}}'

      media_player_count_high:
        friendly_name: 'Media Player Count High Limit'
        value_template: '{{ states.input_number.media_player_count_expected.state |int + 150}}'

      media_player_count_low:
        friendly_name: 'Media Player Count Low Limit'
        value_template: '{{ states.input_number.media_player_count_expected.state |int - 1}}'

      script_count_high:
        friendly_name: 'Script Count High Limit'
        value_template: '{{ states.input_number.script_count_expected.state |int + 150}}'

      script_count_low:
        friendly_name: 'Script Count Low Limit'
        value_template: '{{ states.input_number.script_count_expected.state |int - 1}}'

      sensor_count_high:
        friendly_name: 'Sensor Count High Limit'
        value_template: '{{ states.input_number.sensor_count_expected.state |int + 150}}'

      sensor_count_low:
        friendly_name: 'Sensor Count Low Limit'
        value_template: '{{ states.input_number.sensor_count_expected.state |int - 1}}'

      hass_uptime:
        friendly_name: Home Assistant Uptime
        value_template: >-
          {% set time = states.sensor.time_online.state | int %}
            {% set minutes = ((time % 60) ) | int%}
            {% set hours = ((time % 1440) / 60) | int %}
            {% set days = (time / 1440) | int %}
              {%- if time == 0 -%}
                00:00:00
              {%- else -%}
                {%- if days == 0 -%}
                  00
                {%- endif -%}
                {%- if days > 0 -%}        
                  {%- if days < 10 -%}
                    0{{ days }}
                  {%- else -%}
                    {{ days }}
                  {%- endif -%}
                {%- endif -%}
                {%- if hours == 0 -%}
                  :00
                {%- endif -%}
                {%- if hours > 0 -%}        
                  {%- if hours < 10 -%}
                    :0{{ hours }}
                  {%- else -%}
                    :{{ hours }}
                  {%- endif -%}
                {%- endif -%}
                {%- if minutes == 0 -%}
                  :00
                {%- endif -%}
                {%- if minutes > 0 -%}
                  {%- if minutes < 10 -%}
                    :0{{ minutes }}
                  {%- else -%}
                    :{{ minutes }}
                  {%- endif -%}
                {%- endif -%}
              {%- endif -%}

####################################################
#                                                  #
#                 Sensor - Uptime                  #
#                                                  #
####################################################

  - platform: uptime
    name: Time Online
    unit_of_measurement: minutes

  # Sensor to track available updates for supervisor & addons
  - platform: command_line
    name: Supervisor updates
    command: 'curl http://supervisor/supervisor/info -H "Authorization: Bearer $(printenv SUPERVISOR_TOKEN)" | jq ''{"newest_version":.data.version_latest,"current_version":.data.version,"addons":[.data.addons[] | select(.version != .installed)]}'''
    value_template: "{{ value_json.addons | length }}"
    json_attributes:
    - newest_version
    - current_version
    - addons    

####################################################
#                                                  #
#                  NUMERIC INPUT                   #
#                                                  #
####################################################
input_number:
  automation_count_expected:
    name: Expected Automations
    min: 0
    max: 5000
    mode: box
  binary_sensor_count_expected:
    name: Expected Binary Sensors
    min: 0
    max: 5000
    mode: box
  switch_count_expected:
    name: Expected Switches
    min: 0
    max: 5000
    mode: box
  fan_count_expected:
    name: Expected Fans
    min: 0
    max: 5000
    mode: box
  light_count_expected:
    name: Expected Lights
    min: 0
    max: 5000
    mode: box
  tracked_device_count_expected:
    name: Expected Tracked Devices
    min: 0
    max: 5000
    mode: box
  media_player_count_expected:
    name: Expected Media Players
    min: 0
    max: 5000
    mode: box
  script_count_expected:
    name: Expected Scripts
    min: 0
    max: 5000
    mode: box
  sensor_count_expected:
    name: Expected Sensors
    min: 0
    max: 5000
    mode: box

#################################################################
#                                                               #
#                         System Health                         #
#                                                               #
################################################################# 

system_health:              
